// Arrow style Functions
// 8 kyu https://www.codewars.com/kata/take-an-arrow-to-the-knee-functionally

var ArrowFunc = function(arr) {
    return arr.map(el => String.fromCharCode(el)).join(''); 
  }
// ---------------------------------------------------------------------------


// Merge two sorted arrays into one
// 8 kyu https://www.codewars.com/kata/merge-two-sorted-arrays-into-one


// ---------------------------------------------------------------------------


// 16+18=214
// 7 kyu https://www.codewars.com/kata/16-plus-18-equals-214

// let num1 = 26;
// let num2 = 39;
// function add(num1, num2) {
//     num1 = num1.toString().split("");
//     num2 = num2.toString().split("");
//     console.log(num2)
//     // return num1 + num2;
//   }console.log (num1 + num2);
// ---------------------------------------------------------------------------


// Add property to every object in array
// 7 kyu https://www.codewars.com/kata/add-property-to-every-object-in-array

// ---------------------------------------------------------------------------


// Colour Association
// 7 kyu https://www.codewars.com/kata/colour-association

let array = [["white", "goodness"], ["blue", "tranquility"]];
// console.log(array[0][0])

function colourAssociation(array){
    let arr = [];
  for (let i = 0; i < array.length; i++) {
    arr = arr.push(array[i][0] = array[i][1])
  }
};
console.log(colourAssociation(array))
// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------
